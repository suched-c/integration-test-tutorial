on:
  push:
    branches:
      - master

name: Build and Release Apps
jobs:
  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install pub Dependencies
        run: flutter pub get
      - name: Check for any formatting issues in the code
        run: flutter format --set-exit-if-changed .
      - name: Statically analyze the Dart code for any errors.
        run: flutter analyze .
      #- name: Run Tests
      #  run: flutter test
      - name: Build Android App
        run: flutter build apk
      - name: Upload generated apk to the artifacts.
        uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
      - name: Grant execute permission for gradlew
        run: cd android; chmod +x gradlew
      - name: Assemble App test APK
        run: cd android; ./gradlew app:assembleDebug -Ptarget="integration_test/app_test.dart"
      - name: Upload generated test apk to the artifacts.
        uses: actions/upload-artifact@v1
        with:
          name: app-debug
          path: build/app/outputs/apk/debug/app-debug.apk
      - name: Assemble Android Instrumented Unit Test
        run: cd android; ./gradlew app:assembleAndroidTest
      - name: Upload generated test apk to the artifacts.
        uses: actions/upload-artifact@v1
        with:
          name: app-debug-androidTest
          path: build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk
  build_ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Install pub Dependencies
        run: flutter pub get
      - name: Check for any formatting issues in the code
        run: flutter format --set-exit-if-changed .
      - name: Statically analyze the Dart code for any errors.
        run: flutter analyze .
      #- name: Run Tests
      #  run: flutter test
      - name: Build iOS App
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      - name: Upload generated ipa to the artifacts.
        uses: actions/upload-artifact@v1
        with:
          name: release-ipa
          path: build/ios/iphoneos/app.ipa
#https://dev-yakuza.posstree.com/en/flutter/integration-test/
#require to use fastlane
#      - name: Assemble XCTest
#        run: |
#          flutter build ios --release integration_test/app_test.dart
#          cd ios
#          xcodebuild -allowProvisioningUpdates -workspace Runner.xcworkspace -scheme Runner -config Flutter/Release.xcconfig -derivedDataPath "../build/ios_integ" -sdk iphoneos build-for-testing
#          cd ../build/ios_integ/Build/Products
#          zip -r "ios_tests.zip" "Release-iphoneos" "Runner_iphoneos14.5-arm64-armv7.xctestrun"
  integration_test_android:
    name: Integration Tests for Android
    needs: build_android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Download debug APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug
      - name: Download test APK
        uses: actions/download-artifact@v1
        with:
          name: app-debug-androidTest
      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.FIREBASE_SERVICES_KEY }}
      - name: Set current project
        run: "gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}"
      - name: Run Instrumentation Tests in Firebase Test Lab
        run: "gcloud firebase test android run
             --type instrumentation
             --app app-debug/app-debug.apk
             --test app-debug-androidTest/app-debug-androidTest.apk
             --device model=Pixel2,version=30,locale=en,orientation=portrait"